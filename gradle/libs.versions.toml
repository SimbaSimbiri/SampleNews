[versions]
agp = "8.9.2"
coilCompose = "2.5.0"
koin = "3.5.3"
kotlin = "2.0.0"
compose = "1.6.1"
compose-material3 = "1.2.1"
androidx-activityCompose = "1.9.0"
kotlinxCoroutinesCore = "1.7.3"
kotlinxDatetime = "0.6.2"
lifecycleViewmodelKtx = "2.9.0"
ktorClient = "2.3.5"
kotlinx-serialization = "1.6.0"
sqldelight = "2.1.0"
composeMultiplatform = "1.6.10"
koinCompose = "1.0.4"
kamel = "0.7.1"
voyagerVersion = "1.1.0-alpha04"


[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

### UI dependecies
## AndroidX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
## Compose UI
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
#material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
material-icons-extended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "composeMultiplatform" }


## Multiplaform deps
# for material theme
compose-material = { module = "org.jetbrains.compose.material:material", version.ref = "composeMultiplatform" }
# for navigation
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerVersion" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyagerVersion" }

#for image loading
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamel" }

## Miscellaneous
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }


### Presentation dependecies
## ViewModels
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }

### Data and Networking dependecies
## Our Ktor Base Client and Kotlinx serialization dependecies will be responsible for communicating with the backend
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClient" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorClient" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClient" }
# plaform specific ktor dependecies
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorClient" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorClient" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClient" }
ktor-client-js = {module = "io.ktor:ktor-client-js", version.ref = "ktorClient"}
## Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }
## Sql delight
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sql-desktop-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }


### Technical and Architectural dependecies
## Koin for dependecy injection
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }

### Business and UseCase Logic dependecies
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
kotlinParcelize = { id= "kotlin-parcelize"}
composeMultiplatformPlugin = { id= "org.jetbrains.compose", version.ref = "composeMultiplatform" }
